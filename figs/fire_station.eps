%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (fire_station.eps)
%%CreationDate: (2018-10-17T17:26:32+09:00)
%%BoundingBox: -0 -0 19 30
%%HiResBoundingBox: 0 0 19 30
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 19 30
userdict begin
DisplayImage
0 0
19 30
12
19 30
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF931919A00C0C981212FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
9C0C0CE17474F49191D35555A40909FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA80808C33C3CC64444BC2D2DA80909FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB43D3DD46C6C
D86464E27676CB4949B92323BE3232FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF992828FCC1C1FFA0A0F59898E16C6CE46666EA5D5DE14545A61414FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7E3030CF6161FFA0A0FF7171FF7171
F76060EE4C4CE63939DE2929CC2121941717FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
912B2BDE6E6EEEA5A5FF8282FF7171FF7171F76060EE4C4CE63939DD2626D52525BA1515A11919
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF674949E27676E06363F1ACACFF9191FF7272FF7171F76060
EE4C4CE63939DE2B2BD72626B60505CF2121862525FFFFFFFFFFFFFFFFFFFFFFFF733A3AEB8B8B
EE6666C93434E58989F9AFAFFDA9A9FA9494F37E7EE76060D23737B60A0AC70000D43131951717
FFFFFFFFFFFFFFFFFFFFFFFF915858DE6E6EEB6262EA6A6ADA4343C72424C01A1ABB1414B80F0F
BB0B0BC20909D32626D84141C936369F2121FFFFFFFFFFFFFFFFFFFFFFFF8C6F6FCA4F4FE74C4C
EC5656F29494F5BBBBF0AAAAEC9696E78484E47474DF6464D44040C52727BE2F2F993939FFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF9F3F3FDB5E5EF17878F46262FC6060F96060F05656E74C4CDE4242
D63D3DD14444C73C3CA51B1BFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA03B3BA03B3BAE2929BB2B2B
D86262F08C8CF48D8DF38787E87777DD6565CB4A4AB01D1DA41010983030A43131FFFFFFFFFFFF
FFFFFFA43030EE8282E85353B51F1FE25B5BCF3737C42F2FB72020AF1212AD1414AE1B1BAC1B1B
AD1B1BAE1A1AD34E4EEE5E5EAF2020FFFFFFFFFFFFA72929F68080F35A5AB41B1BEB5D5DD83838
C63534DA6565E88383DD6868BF2525D24C4BCB3A3AB01616DF5C5CF35656B22323FFFFFFFFFFFF
A50606F67F7FF35959B41A1AEB5C5CC02424F69797F97777F66262F56565F57979C73333CC4847
AF1414DF5959F35555AB1010FFFFFFFFFFFFA40000F07474EC4D4DB31919D43D3DE67B7BF46161
F15252E34141ED4A4AEB4646E95C5CB91F1EAE1212DA5050EC4949A80B0BFFFFFFFFFFFFA40101
E66262DE3434B01515BF2121F28989EC4747D42E2EBE2020BE1717E43636E54444B91C1CAE1111
D24040DE3131A80A0AFFFFFFFFFFFFA31A1ADB5050D11D1DAF1212C02121ED7878E53737CF2323
BC1F1FBC1212DD2727DD3131B61716AE0F0FC93131D01A1AAA1313FFFFFFFFFFFFA12020D14646
C10606AD0F0FD23838D75252DF3131DC2424D11A1AD81B1BD61717D52020B61616AD0D0DC02121
C10202A71111FFFFFFFFFFFFFFFFFFA51D1D9D0F0FB42B2BE95555BB1616DB4343D82525D41313
D21212D11616B80D0DCB4444B011119F1111A00C0CFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
C13838EA5555D53333BD2929C11D1DC41818BE1414B40909D04A4ACF4949B00F0FFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC54B4BBF2F2FEC6767EB4848F45F5FE54242C93535D45050
D43636D03B3BC12525AF0B0BBE1818FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF350000EC8E8EDE5151
C52E2EE86868FC7C7CF87070ED5F5FE35252D94646CA3232B51212B80404D220207D0202FFFFFF
FFFFFFFFFFFFFFFFFF3A0000E27575ED5F5FE45050C72727BE1E1EC12727BE2525BA1B1BB50F0F
B70808C60303D32525CF3C3C800202FFFFFFFFFFFFFFFFFFFFFFFF2D0000D25C5CE64343EE7C7C
F09C9CED9393E87D7DE25F5FDF5A5ADE5959DF5F5FDC5959CC3030C03030760202FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFF901212EA7272ED5656F35050F86464F26A6AEB6666E45656DE4747D53939
CD3333CA3C3C9E1515FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF941C1CCB5959F18A8A
FD9292FA8484F27171EB6B6BE46565DB5D5DC03F3F9B1717FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFF523636811C1CA42626AE3434B23838AB2E2EA02020911A1A6D3B3B
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
