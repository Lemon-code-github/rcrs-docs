%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (refuge.eps)
%%CreationDate: (2018-10-17T17:26:32+09:00)
%%BoundingBox: -0 -0 30 29
%%HiResBoundingBox: 0 0 30 29
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 30 29
userdict begin
DisplayImage
0 0
30 29
12
30 29
0
0
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFCFCC5C5C58F89897C6464
7C53537D44447D44447B52527B6565908A8AC6C6C6FCFCFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2F2F28B8282
6519199A1818C53131DD4A4AE95E5EEF6565EE6565E95C5CDA4747C02D2D9415155F19198A8383
F3F3F3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFA199998B2323D93B3BF77575FEA4A4FFC1C1FFCFCFFFD5D5FFD6D6FFD6D6FFD4D4FFCECE
FFBEBEFE9E9EF66D6DD23434B65656B7B1B1FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FEFEFEFFFFFFFFFFFFF0F0F0865353DC3737FC8484FFBCBCFFCECEFFD0D0FFCECEFFCECEFFCECE
FFCDCDFFCDCDFFCECEFFCECEFFCECEFFD0D0FFCDCDFFB7B7FB7A7ADF3B3BA67A7AF1F1F1FFFFFF
FFFFFFFFFFFFFFFFFFFBFBFBFFFFFFFFFFFFF4F4F49D4343F75D5DFFADADFFC5C5FFC5C5FFC5C5
FFC5C5FFC6C6FFC5C5FFCACAFFDADAFFDADAFFCBCBFFC5C5FFC5C5FFC4C4FFC4C4FFC4C4FFC4C4
FFA5A5F35151AE5E5EF5F5F5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFBFBFBB26262FB6E6EFFB4B4
FFBCBCFFBCBCFFBDBDFFBDBDFFBEBEFFBFBFFFCFCFFFEEEEFFFEFEFFFEFEFFEFEFFFD0D0FFBFBF
FFC6C6FFC8C8FFC8C8FFC2C2FFBCBCFFAFAFF96060AE6666FBFBFBFFFFFFFFFFFFFFFFFFFFFFFF
AC8989FB6767FFAEAEFFB3B3FFB3B3FFB5B5FFB6B6FFB6B6FFBDBDFFDBDBFFF9F9FFFFFFFFFFFF
FFFFFFFFFFFFFFF9F9FFE0E0FFEFEFFFF9F9FFFAFAFFDADAFFB2B2FFB3B3FFA9A9F85858A98C8C
FFFFFFFFFFFFFFFFFFDFDDDDEE4F4FFFA0A0FFAAAAFFABABFFADADFFAEAEFFB0B0FFC5C5FFECEC
FFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFEFEFFFFFFFFFFFFFFDADAFFACAC
FFAAAAFFAAAAFF9999E84343E2E1E1FFFFFFFFFFFFB47070FF8484FFA2A2FFA3A3FFA5A5FFA6A6
FFB1B1FFD5D5FFF8F8FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFD8D8FFA5A5FFA4A4FFA2A2FFA1A1FF7777AF7171FFFFFFEEEDEDF25252FF9696
FF9A9AFF9C9CFFA0A0FFBBBBFFE9E9FFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFFFBCBCFF9F9FFF9B9BFF9999FF9191EC4646
EFEEEEBAA7A7FF6E6EFF9292FF9494FFA0A0FFD0D0FFF8F8FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF9F9FFD1D1
FFA0A0FF9292FF9191FD6262BAAAAAB46F6FFF7B7BFF8C8CFF9191FFD5D5FFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFD7D7FF9090FF8A8AFF7272AE6F6FC95151FF7474FF8585FC8C8C
F5D4D4FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7D8D8FC8B8BFF8383FF6C6CBE4F4F
DA3F3FFF4E4EFF6565FD7878DB7A7AD4A4A4E6CBCBFFFEFEFFFFFFF5EEEEEAD7D7EAD6D6EBD9D9
F9F4F4FFFFFFFFFFFFEDDBDBD8AAAAD8A8A8D9ABABEFE0E0FFFFFFFFFFFFE8CFCFD4A4A4DA7A7A
FD7373FF5E5EFF4949CD3F3FE03F3FFF4C4CFF5252FF5D5DFA6666E65F5FEB9A9AFFFEFEFBF6F6
D46060D11C1CD42121D11E1EDC8484FEFFFFFDFEFED66464DE0000E10303DC0000D87272FEFFFF
FFFFFFECA0A0E55A5AF96060FF5959FF4F4FFF4949D43D3DD44545FF5151FF5858FF6060FF6767
FF6E6EFFA5A5FFFFFFFAEEEEF44444FF2626FF3333FF2626F06565FDFCFCFCFCFCEA5656FF0000
FF0000FE0000EA6464FDFEFEFFFFFFFFAAAAFF6A6AFF6464FF5C5CFF5454FF4E4EC64444B85050
FF5757FF5D5DFF6565FF6D6DFF7373FFA8A8FFFEFEFEFAFAFBA2A2FF8888FF9696FF8A8AFBB9B9
FFFFFFFCFCFCEA5959FF0101FF0505FE0101EA6666FDFEFEFFFFFFFFACACFF6F6FFF6969FF6161
FF5959FF5454AD5050A26868FE5E5EFF6161FF6A6AFF7272FF7979FFACACFFFEFEFFFFFFFFFEFE
FFFDFDFFFDFDFFFDFDFFFEFEFFFFFFFCFCFCEA6060FF1111FF1515FE1010EA6C6CFDFEFEFFFFFF
FFB0B0FF7575FF6E6EFF6666FF5D5DFB58589D6969B7A9A9F05858FF6969FF6E6EFF7777FF7E7E
FFB0B0FFFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFCFCFCEA6969FF2626FF2B2B
FE2525EA7474FDFEFEFFFFFFFFB4B4FF7A7AFF7373FF6A6AFF6767E74C4CB8ADADF2F2F2C83434
FF7777FF7272FF7C7CFF8383FDAFAFFEFCFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FCFDFDED8383FE4444FF4949FD4343EB8D8DFDFFFFFFFEFEFDB3B3FF7F7FFF7777FF6F6FFF7272
B82929F3F3F3FFFFFF9D6161F15959FF8686FF7F7FFF8989EF8E8EE3C2C2F3E9E9F6EBEBF7EBEB
F8EAEAF9EAEAFAEAEAFAEAEAFAEAEAF6D2D2F8B9B9F8B9B9F5B9B9F1D5D5F3EAEAE4C7C7EC8B8B
FF8484FF7B7BFF8484E94C4C976464FFFFFFFFFFFFE6E5E5C01C1CFC7676FF9494FF8D8DFB9292
DC7C7CD17D7DD98585DE8A8AE38E8EE79292E99595EB9797EA9696E99696E69393E28F8FDD8B8B
D78585D07C7CDA7777FA8B8BFF8989FF9494F86B6BB21919EAE9E9FFFFFFFFFFFFFFFFFFA78282
DB1E1EFD8181FFA6A6FF9E9EFFA4A4FEADADFEB8B8FFC3C3FFCECEFFD8D8FFE0E0FFE4E4FFE3E3
FFDDDDFFD3D3FFC9C9FEBEBEFEB3B3FEA8A8FF9F9FFF9C9CFFA6A6FB7777D01717A58787FFFFFF
FFFFFFFFFFFFFFFFFFFEFEFEA55D5DE42020FD7979FFB4B4FFB7B7FFB5B5FFBDBDFFC8C8FFD4D4
FFE0E0FFEAEAFFF1F1FFEFEFFFE6E6FFDADAFFCFCFFFC3C3FFB8B8FFB1B1FFB6B6FFB1B1FB7070
DB1A1A9F6060FEFEFEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF4F4F4AB3A3AE81818FB5E5EFFA7A7
FFCACAFFD1D1FFD3D3FFD9D9FFE3E3FFEEEEFFF8F8FFF5F5FFE9E9FFDEDEFFD4D4FFCFCFFFCFCF
FFC8C8FFA3A3F85757E01414A23C3CF5F5F5FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
F8F8F8A97171EF0B0BFD3939FF7C7CFFB2B2FFD2D2FFE2E2FFEBEBFFF2F2FFF6F6FFF5F5FFF0F0
FFEAEAFFE2E2FFD2D2FFB0B0FF7777F93434E40A0AA47373F8F8F8FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFB09D9DD21D1DFE2222FF5252FF8282FFAAAAFFC9C9
FFE0E0FFF0F0FFF2F2FFE3E3FFCBCBFFAAAAFF7D7DFF4646FB1515C61D1DB0A1A1FFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF2F2F2A48B8B
BF3B3BEC4444FC5F5FFF7B7BFF9292FFA1A1FFA0A0FF8D8DFF7373FB5454EA3838B93232A38B8B
F3F3F3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFCFCFCC9C7C7A29191A27878B17373BE7272BE7171B17070A07575
A29191C9C7C7FCFCFCFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF

end
%%PageTrailer
%%Trailer
%%EOF
